name: CI/CD for Markdiary

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '20'

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: npm ci

    - name: Run eslint
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build app
      env:
        REACT_APP_GITHUB_APP_NAME: ${{ vars.GH_APP_NAME }}
        REACT_APP_GITHUB_APP_CLIENT_ID: ${{ secrets.GH_APP_CLIENT_ID }}
        REACT_APP_GITHUB_APP_EXCHANGE_URL: ${{ secrets.GH_APP_EXCHANGE_URL }}
        REACT_APP_GITHUB_APP_REFRESH_URL: ${{ secrets.GH_APP_REFRESH_URL }}
        REACT_APP_MARKDIARY_GITHUB_URL: ${{ vars.MARKDIARY_GITHUB_URL }}
      run: npm run build

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
